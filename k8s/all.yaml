apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    app: playground
    tier: gateway
spec:
  type: NodePort
  ports:
    - port: 80
  selector:
    app: playground
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  selector:
    matchLabels:
      app: playground
      tier: gateway
  replicas: 4
  template:
    metadata:
      labels:
        app: playground
        tier: gateway
    spec:
      containers:
        - name: default
          image: docker.io/carabas/k8s-playground@sha256:bddadd057674fc0d5b5ce1b15e6757330257dc70664ad8f9024b3bf2b6f354f4
          resources:
            requests:
              cpu: 500m
          ports:
            - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gateway
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-23f2922c,subnet-3b8c2d5c,subnet-b5d4238b
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:186546143089:certificate/0bd788f9-b14f-4150-aab8-9cc19d978336
spec:
  rules:
  - host: gateway.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: gateway
          servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
---
# Grant kubernetes-dashboard user full admin access
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kube-system
